name: CI

on: [push]

jobs:
  unit-tests:
    name: Unit Tests

    runs-on: ${{ matrix.os }}

    env:
      PHP_INI_VALUES: memory_limit=-1, assert.exception=1, zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        php-version:
          - "8.2"

    steps:
      - name: Configure Git to avoid issues with line endings
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          tools: none

      - name: Install dependencies with Composer
        run: composer update --no-ansi --no-interaction --no-progress

      - name: Run tests with PHPUnit
        run: ./vendor/bin/phpunit --testsuite unit

  phpstan:
    name: Static Analysis

    runs-on: ubuntu-latest

    env:
      PHP_INI_VALUES: memory_limit=-1, assert.exception=1, zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On

    strategy:
      fail-fast: false
    steps:
      - name: Configure Git to avoid issues with line endings
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          ini-values: ${{ env.PHP_INI_VALUES }}
          tools: none

      - name: Install dependencies with Composer
        run: composer update --no-ansi --no-interaction --no-progress

      - name: Run static analysis with PHPStan
        run: ./vendor/bin/phpstan analyse src tests --error-format table --ansi
